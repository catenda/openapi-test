openapi: 3.0.3
info:
  title: OpenCDE OpenAPI Specification
  version: "1.0"
externalDocs:
  description: Find out more about Catenda REST API
  url: https://api.catenda.com/developers/reference/api/v2#catenda-rest-api-v2-stable
servers:
  - url: https://api.catenda.com/v2
tags:
  - name: project
  - name: member
  - name: model
  - name: label
paths:
  /projects:
    get:
      tags:
        - project
      summary: List projects
      operationId: listProjects
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
      security:
        - catenda_auth:
            - write:projects
            - read:projects
    post:
      tags:
        - project
      summary: Create project
      operationId: addProject
      requestBody:
        description: Create a new project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'          
        '403':
          description: Insufficient privilege
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                100:
                  value:
                    code: 100
                    message: Insufficient privilege
                101:
                  value:
                    code: 101
                    message: Project limit exceeded
        '404':
          description: Organization (:org) not found
        '422':
          description: Message from input validation
      security:
        - catenda_auth:
            - write:projects
            - read:projects
  /projects/{project}:
    get:
      tags:
        - project
      summary: Get project
      operationId: getProject
      parameters:
        - name: project
          in: path
          description: ID of project to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Project (:project) not found
      security:
        - catenda_auth:  
            - write:project
            - read:project
    put:
      tags:
        - project
      summary: Update  project
      operationId: updateProject
      parameters:
        - name: project
          in: path
          description: ID of project that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existing project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '403':
          description: Insufficient privilege
        '404':
          description: Project (:project) not found
        '422':
          description: Message from input validation
      security:
        - catenda_auth:
            - write:projects
            - read:projects
    delete:
      tags:
        - project
      summary: Delete project
      operationId: deleteProject
      parameters:
        - name: project
          in: path
          description: ID of project that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '403':
          description: Insufficient privilege
        '404':
          description: Project (:project) not found
      security:
        - catenda_auth:
            - write:project
            - read:project
  /projects/{project}/members:
    get:
      tags:
        - member
      summary: Get members
      description: List project members.
      operationId: getMembers
      parameters:
        - name: project
          in: path
          description: ID of project members belong to
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Project not found:
                  value:
                    code: 20
                    message: Project (:project) not found
    post:
      tags:
        - member
      summary: Add member
      operationId: addMember
      parameters:
        - name: project
          in: path
          description: ID of project member will belong to
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Create a new member
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Already a member:
                  value:
                    code: 24
                    message: User (:user) is already a member
                Unknown user:
                  value:
                    code: 24
                    message: Unknown user (:user)
                Unable to set role:
                  value:
                    code: 24
                    message: Unable to set role (:role)
                Existing team:
                  value:
                    code: 24
                    message: Cannot add an existing team as a member (:user)
                Invalid role:
                  value:
                    code: 24
                    message: Invalid role (:role)
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Insufficient privilege:
                  value:
                    code: 100
                    message: Insufficient privilege
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Not found:
                  value:
                    code: 20
                    message: Project (:project) not found
  /projects/{project}/members/{user}:
    get:
      tags:
        - member
      summary: Get member
      operationId: getMember
      parameters:
        - name: project
          in: path
          description: ID of project member belongs to
          required: true
          schema:
            type: integer
            format: int64
        - name: user
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Project not found:
                  value:
                    code: 20
                    message: Project (:project) not found
                Member not found:
                  value:
                    code: 20
                    message: Member (:user) not found
    put:
      tags:
        - member
      summary: Update member
      operationId: updateMember
      parameters:
        - name: project
          in: path
          description: ID of project to update
          required: true
          schema:
            type: integer
            format: int64
        - name: user
          in: path
          description: ID of user to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Create a new member
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Member not found:
                  value:
                    code: 20
                    message: Member (:user) not found
    delete:
      tags:
        - member
      summary: Delete member
      operationId: deleteMember
      parameters:
        - name: project
          in: path
          description: ID of project to delete
          required: true
          schema:
            type: integer
            format: int64
        - name: user
          in: path
          description: ID of user to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Member not found:
                  value:
                    code: 20
                    message: Member (:user) not found
  /projects/{project}/models:
    get:
      tags:
        - model
      summary: Get models
      operationId: getModels
      parameters:
        - name: project
          in: path
          description: ID of project models belong to
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Model'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Project not found:
                  value:
                    code: 20
                    message: Project (:project) not found
    post:
      tags:
        - model
      summary: Add model
      operationId: addModel
      parameters:
        - name: project
          in: path
          description: ID of project model will belong to
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Create a new model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Insufficient privilege:
                  value:
                    code: 100
                    message: Insufficient privilege
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Not found:
                  value:
                    code: 20
                    message: Project (:project) not found
  /projects/{project}/models/{model}:
    get:
      tags:
        - model
      summary: Get model
      operationId: getModel
      parameters:
        - name: project
          in: path
          description: ID of project model belongs to
          required: true
          schema:
            type: integer
            format: int64
        - name: model
          in: path
          description: ID of model to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Project not found:
                  value:
                    code: 20
                    message: Project (:project) not found
                Model not found:
                  value:
                    code: 20
                    message: Model (:model) not found
    put:
      tags:
        - model
      summary: Update model
      operationId: updateModel
      parameters:
        - name: project
          in: path
          description: ID of project to update
          required: true
          schema:
            type: integer
            format: int64
        - name: model
          in: path
          description: ID of model to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Create a new model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Model not found:
                  value:
                    code: 20
                    message: Model (:model) not found
    delete:
      tags:
        - model
      summary: Delete model
      operationId: deleteModel
      parameters:
        - name: project
          in: path
          description: ID of project to delete
          required: true
          schema:
            type: integer
            format: int64
        - name: model
          in: path
          description: ID of model to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Model not found:
                  value:
                    code: 20
                    message: Model (:model) not found
  /projects/{project}/labels:
    get:
      tags:
        - label
      summary: Get labels
      operationId: getLabels
      parameters:
        - name: project
          in: path
          description: ID of project labels belong to
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Label'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Project not found:
                  value:
                    code: 20
                    message: Project (:project) not found
    post:
      tags:
        - label
      summary: Add label
      operationId: addLabel
      parameters:
        - name: project
          in: path
          description: ID of project label will belong to
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Creates a new label.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Insufficient privilege:
                  value:
                    code: 100
                    message: Insufficient privilege
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Not found:
                  value:
                    code: 20
                    message: Project (:project) not found
  /projects/{project}/labels/{label}:
    get:
      tags:
        - label
      summary: Get label
      operationId: getLabel
      parameters:
        - name: project
          in: path
          description: ID of project label belongs to
          required: true
          schema:
            type: integer
            format: int64
        - name: label
          in: path
          description: ID of label to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Project not found:
                  value:
                    code: 20
                    message: Project (:project) not found
                Label not found:
                  value:
                    code: 20
                    message: Label (:label) not found
    put:
      tags:
        - label
      summary: Update label
      operationId: updateLabel
      parameters:
        - name: project
          in: path
          description: ID of project to update
          required: true
          schema:
            type: integer
            format: int64
        - name: label
          in: path
          description: ID of label to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Creates a new label.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                label not found:
                  value:
                    code: 20
                    message: Label (:label) not found
    delete:
      tags:
        - label
      summary: Delete label
      operationId: deleteLabel
      parameters:
        - name: project
          in: path
          description: ID of project to delete
          required: true
          schema:
            type: integer
            format: int64
        - name: label
          in: path
          description: ID of label to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
              examples:
                Label not found:
                  value:
                    code: 20
                    message: Label (:label) not found
components:
  schemas:
    Member:
      required:
        - role
        - user
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: dr346f5422
        user:
          $ref: '#/components/schemas/User'
    Model:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: d746f5422
        name:
          type: string
          example: ARC
    Label:
      required:
        - name
        - color
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: d729fd422
        name:
          type: string
          example: Green
        color:
          type: string
          example: '#6aa84f'
    User:
      required:
        - name
        - username
      properties:
        id:
          type: integer
          format: int64
          example: 12345
        avatarUrl:
          type: string
          example: https://api.catenda.com/v2/avatar/12345
        name:
          type: string
          example: Kristine Knight
        username:
          type: string
          example: kristine.knight@example.com
    Project:
      required:
        - name
        - description
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: c729438c4
        name:
          type: string
          example: Old Town High School
        description:
          type: string
          example: Old Town, Stavanger
        imageUrl:
          type: string
          example: https://api.catenda.com/v2/projects/c729438c4/image
    ApiResponseOk:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    ApiResponseError:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
              format: int32
            message:
              type: string
  securitySchemes:
    catenda_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://api.catenda.com/oauth2/authorize
          scopes:
            write:projects: modify projects that you are administrator
            read:projects: read projects you are a member of
