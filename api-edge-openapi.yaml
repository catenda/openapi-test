---
openapi: 3.0.3
info:
  title: Generated API
  version: "1.0"
paths:
  /1.0/js/viewer.js:
    get:
      parameters:
      - name: release
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /1.0/js/viewer2d.js:
    get:
      parameters:
      - name: release
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /health:
    get:
      responses:
        "200":
          description: OK
  /js/v1/viewer2d:
    get:
      parameters:
      - name: release
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /js/v1/viewer3d:
    get:
      parameters:
      - name: release
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /oauth2/authorize:
    get:
      parameters:
      - name: client_id
        in: query
        schema:
          type: string
      - name: code_challenge
        in: query
        schema:
          type: string
      - name: code_challenge_method
        in: query
        schema:
          type: string
      - name: prompt
        in: query
        schema:
          type: string
      - name: redirect_uri
        in: query
        schema:
          type: string
      - name: response_mode
        in: query
        schema:
          type: string
      - name: response_type
        in: query
        schema:
          type: string
      - name: state
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /oauth2/token:
    post:
      responses:
        "200":
          description: OK
  /ping:
    get:
      responses:
        "200":
          description: OK
  /unrestrictedhealth:
    get:
      responses:
        "200":
          description: OK
  /v2/avatar/{encrypted-user-id}:
    get:
      parameters:
      - name: encrypted-user-id
        in: path
        required: true
        schema:
          type: string
      - name: size
        in: query
        schema:
          format: int32
          default: "32"
          type: integer
      - name: If-None-Match
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/callback:
    post:
      parameters:
      - name: token
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/download:
    get:
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: optimized
        in: query
        schema:
          type: string
      - name: range-status
        in: query
        schema:
          type: string
      - name: token
        in: query
        schema:
          type: string
      - name: Range
        in: header
        schema:
          type: string
      - name: Token
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
    head:
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: range-status
        in: query
        schema:
          type: string
      - name: token
        in: query
        schema:
          type: string
      - name: Range
        in: header
        schema:
          type: string
      - name: Token
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/notifications:
    get:
      parameters:
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      responses:
        "200":
          description: OK
  /v2/orgs:
    get:
      parameters:
      - name: include
        in: query
        schema:
          type: string
      - name: organizationRole
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: search
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/orgs/{organization-id}:
    get:
      parameters:
      - name: organization-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: organization-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/orgs/{organization-id}/members:
    get:
      parameters:
      - name: organization-id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: role
        in: query
        schema:
          type: string
      - name: search
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      - name: user
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: organization-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: organization-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/orgs/{organization-id}/members/batch:
    post:
      parameters:
      - name: organization-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
    parameters:
    - name: organization-id
      in: path
      required: true
      schema:
        type: string
  /v2/orgs/{organization-id}/members/suggest:
    get:
      parameters:
      - name: organization-id
        in: path
        required: true
        schema:
          type: string
      - name: includeUsersFromOwnedDomains
        in: query
        schema:
          type: boolean
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: search
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/orgs/{organization-id}/members/{user-id}:
    get:
      parameters:
      - name: organization-id
        in: path
        required: true
        schema:
          type: string
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: organization-id
        in: path
        required: true
        schema:
          type: string
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: organization-id
        in: path
        required: true
        schema:
          type: string
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/orgs/{organization-id}/project_members:
    get:
      parameters:
      - name: organization-id
        in: path
        required: true
        schema:
          type: string
      - name: organization-member
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: project
        in: query
        schema:
          type: string
      - name: role
        in: query
        schema:
          type: string
      - name: search
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      - name: user
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/orgs/{organization-id}/project_members/batch:
    delete:
      parameters:
      - name: organization-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
    parameters:
    - name: organization-id
      in: path
      required: true
      schema:
        type: string
  /v2/orgs/{organization-id}/projects:
    get:
      parameters:
      - name: organization-id
        in: path
        required: true
        schema:
          type: string
      - name: createdAtFrom
        in: query
        schema:
          type: string
      - name: createdAtTo
        in: query
        schema:
          type: string
      - name: expiration
        in: query
        schema:
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revisions
        in: query
        schema:
          default: none
          type: string
      - name: search
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      - name: updatedAtFrom
        in: query
        schema:
          type: string
      - name: updatedAtTo
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: organization-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      - name: models-as-documents
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/orgs/{organization-id}/projects/batch:
    delete:
      parameters:
      - name: organization-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
    parameters:
    - name: organization-id
      in: path
      required: true
      schema:
        type: string
  /v2/projects:
    get:
      parameters:
      - name: createdAtFrom
        in: query
        schema:
          type: string
      - name: createdAtTo
        in: query
        schema:
          type: string
      - name: expiration
        in: query
        schema:
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      - name: includeProjectSettings
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revisions
        in: query
        schema:
          default: none
          type: string
      - name: search
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      - name: updatedAtFrom
        in: query
        schema:
          type: string
      - name: updatedAtTo
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: include
        in: query
        schema:
          type: string
      - name: includeProjectSettings
        in: query
        schema:
          type: string
      - name: models-as-documents
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      - name: includeProjectSettings
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      - name: includeProjectSettings
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/custom-fields:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: archived
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/custom-fields/{custom-field-id}:
    get:
      parameters:
      - name: custom-field-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: custom-field-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
  /v2/projects/{project-id}/custom-fields/{custom-field-id}/enumeration-items:
    get:
      parameters:
      - name: custom-field-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: disabled
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      responses:
        "200":
          description: OK
    parameters:
    - name: custom-field-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
  /v2/projects/{project-id}/ifc/classification_references:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/classification_references/relations:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/classification_references/{object-id}:
    get:
      parameters:
      - name: object-id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/classification_references/{object-id}/relations:
    get:
      parameters:
      - name: object-id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/classifications:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/classifications/{object-id}:
    get:
      parameters:
      - name: object-id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/classifications/{object-id}/relations:
    get:
      parameters:
      - name: object-id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/groups:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: ifcType
        in: query
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/groups/ifctypes:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/groups/relations:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/groups/{object-id}:
    get:
      parameters:
      - name: object-id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/groups/{object-id}/relations:
    get:
      parameters:
      - name: object-id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/layers:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: ifcType
        in: query
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/layers/ifctypes:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/layers/relations:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/layers/{object-id}:
    get:
      parameters:
      - name: object-id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/layers/{object-id}/relations:
    get:
      parameters:
      - name: object-id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/ownerhistory:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/ownerhistory/{object-id}:
    get:
      parameters:
      - name: object-id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/products:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: ifcType
        in: query
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: lengthUnit
        in: query
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: X-Index-Mode
        in: header
        schema:
          $ref: '#/components/schemas/IndexModeEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/products/bounding-box:
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/products/fields:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 1000
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: X-Index-Mode
        in: header
        schema:
          $ref: '#/components/schemas/IndexModeEntity'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/products/ifctypes:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/products/relations:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/products/{object-id}:
    get:
      parameters:
      - name: object-id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/products/{object-id}/relations:
    get:
      parameters:
      - name: object-id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/types:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: ifcType
        in: query
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/types/ifctypes:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/types/relations:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/types/{object-id}:
    get:
      parameters:
      - name: object-id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/ifc/types/{object-id}/relations:
    get:
      parameters:
      - name: object-id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/image:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: size
        in: query
        schema:
          format: int32
          default: "400"
          type: integer
      - name: If-None-Match
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/issues/boards/custom-fields:
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/issues/boards/custom-fields/sum:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/issues/boards/{board-id}:
    get:
      parameters:
      - name: board-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      - name: includeCustomFields
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: board-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
    - name: include
      in: query
      schema:
        type: string
    - name: includeCustomFields
      in: query
      schema:
        type: string
  /v2/projects/{project-id}/labels:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      - name: includeGroup
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/labels/batch:
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: deleteInUse
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
    parameters:
    - name: project-id
      in: path
      required: true
      schema:
        type: string
    - name: include
      in: query
      schema:
        type: string
  /v2/projects/{project-id}/labels/label-groups:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: search
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/labels/label-groups/batch:
    delete:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/labels/label-groups/{group-id}:
    get:
      parameters:
      - name: group-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: group-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: group-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
  /v2/projects/{project-id}/labels/statistics:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: ids
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/labels/statistics/group:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/labels/{label-id}:
    get:
      parameters:
      - name: label-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: label-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: deleteInUse
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: label-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
    - name: include
      in: query
      schema:
        type: string
  /v2/projects/{project-id}/labels/{label-id}/merge:
    post:
      parameters:
      - name: label-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
    parameters:
    - name: label-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
    - name: include
      in: query
      schema:
        type: string
  /v2/projects/{project-id}/libraries:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/collections:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: createdAtFrom
        in: query
        schema:
          type: string
      - name: createdAtTo
        in: query
        schema:
          type: string
      - name: createdBy
        in: query
        schema:
          type: string
      - name: fields
        in: query
        schema:
          type: string
      - name: files
        in: query
        schema:
          type: string
      - name: finalized
        in: query
        schema:
          type: string
      - name: finalizedState
        in: query
        schema:
          type: string
      - name: followLatestRevision
        in: query
        schema:
          type: string
      - name: followers
        in: query
        schema:
          type: string
      - name: libraryItems
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: search
        in: query
        schema:
          type: string
      - name: sharedBy
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      - name: visibility
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/collections/{collection-id}:
    get:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: collection-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
  /v2/projects/{project-id}/libraries/collections/{collection-id}/copy:
    post:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
    parameters:
    - name: collection-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
  /v2/projects/{project-id}/libraries/collections/{collection-id}/events:
    get:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: createdAtFrom
        in: query
        schema:
          type: string
      - name: createdAtTo
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/collections/{collection-id}/followers:
    get:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/collections/{collection-id}/followers/{user-id}:
    delete:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/collections/{collection-id}/items:
    get:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      - name: libraryItemInclude
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/collections/{collection-id}/items/{item-id}:
    get:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: item-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: item-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/collections/{collection-id}/request-zip:
    post:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: accept
        in: query
        schema:
          type: string
      - name: ignore-missing-files
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: collection-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
  /v2/projects/{project-id}/libraries/collections/{collection-id}/shared-zip-status:
    get:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: collection-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
  /v2/projects/{project-id}/libraries/collections/{collection-id}/sharings:
    get:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/collections/{collection-id}/sharings/{share-id}:
    get:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: share-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/collections/{collection-id}/sharings/{share-id}/resend:
    post:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: share-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/collections/{collection-id}/sharings/{share-id}/revoke:
    post:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: share-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/collections/{collection-id}/sharings/{share-id}/unrevoke:
    post:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: share-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/collections/{collection-id}/update-versions:
    post:
      parameters:
      - name: collection-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: collection-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
  /v2/projects/{project-id}/libraries/{library-id}:
    get:
      parameters:
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: library-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
  /v2/projects/{project-id}/libraries/{library-id}/acl-overview:
    get:
      parameters:
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/{library-id}/acl-overview/{library-item-id}/{user-id}:
    get:
      parameters:
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: library-item-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/{library-id}/items:
    get:
      parameters:
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      - name: includeLabel
        in: query
        schema:
          type: string
        deprecated: true
      - name: includeLabelGroup
        in: query
        schema:
          type: string
        deprecated: true
      - name: includePath
        in: query
        schema:
          type: string
        deprecated: true
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: Bimsync-Params
        in: header
        schema:
          $ref: '#/components/schemas/NewLibraryItemEntity'
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/{library-id}/items/batch:
    delete:
      parameters:
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
    parameters:
    - name: library-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
    - name: include
      in: query
      schema:
        type: string
  /v2/projects/{project-id}/libraries/{library-id}/items/custom-fields/context:
    post:
      parameters:
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/{library-id}/items/custom-fields/sum:
    post:
      parameters:
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/{library-id}/items/list:
    post:
      parameters:
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/{library-id}/items/{item-id}:
    get:
      parameters:
      - name: item-id
        in: path
        required: true
        schema:
          type: string
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      - name: includeLabel
        in: query
        schema:
          type: string
      - name: includeLabelGroup
        in: query
        schema:
          type: string
      - name: includePath
        in: query
        schema:
          type: string
      - name: accept
        in: query
        schema:
          type: string
      - name: format
        in: query
        schema:
          type: string
      - name: Range
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: item-id
        in: path
        required: true
        schema:
          type: string
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: item-id
      in: path
      required: true
      schema:
        type: string
    - name: library-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
    - name: include
      in: query
      schema:
        type: string
    - name: includeLabel
      in: query
      schema:
        type: string
    - name: includeLabelGroup
      in: query
      schema:
        type: string
    - name: includePath
      in: query
      schema:
        type: string
  /v2/projects/{project-id}/libraries/{library-id}/items/{item-id}/associations:
    get:
      parameters:
      - name: item-id
        in: path
        required: true
        schema:
          type: string
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: item-id
        in: path
        required: true
        schema:
          type: string
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: item-id
        in: path
        required: true
        schema:
          type: string
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: model
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: revision
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/{library-id}/items/{item-id}/drafts/{draft-id}/token:
    post:
      parameters:
      - name: draft-id
        in: path
        required: true
        schema:
          type: string
      - name: item-id
        in: path
        required: true
        schema:
          type: string
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: format
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/{library-id}/items/{item-id}/naming-conventions/validate-all-files:
    get:
      parameters:
      - name: item-id
        in: path
        required: true
        schema:
          type: string
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/{library-id}/items/{item-id}/revisions:
    get:
      parameters:
      - name: item-id
        in: path
        required: true
        schema:
          type: string
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: item-id
        in: path
        required: true
        schema:
          type: string
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: Bimsync-Params
        in: header
        schema:
          $ref: '#/components/schemas/CreateLibraryItemRevision'
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/libraries/{library-id}/items/{item-id}/revisions/{revision-id}:
    get:
      parameters:
      - name: item-id
        in: path
        required: true
        schema:
          type: string
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision-id
        in: path
        required: true
        schema:
          type: string
      - name: accept
        in: query
        schema:
          type: string
      - name: format
        in: query
        schema:
          type: string
      - name: Range
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: item-id
      in: path
      required: true
      schema:
        type: string
    - name: library-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
    - name: revision-id
      in: path
      required: true
      schema:
        type: string
  /v2/projects/{project-id}/libraries/{library-id}/items/{item-id}/revisions/{revision-id}/download:
    get:
      parameters:
      - name: item-id
        in: path
        required: true
        schema:
          type: string
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision-id
        in: path
        required: true
        schema:
          type: string
      - name: accept
        in: query
        schema:
          type: string
      - name: format
        in: query
        schema:
          type: string
      - name: Range
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: item-id
      in: path
      required: true
      schema:
        type: string
    - name: library-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
    - name: revision-id
      in: path
      required: true
      schema:
        type: string
  /v2/projects/{project-id}/libraries/{library-id}/items/{item-id}/revisions/{revision-id}/token:
    post:
      parameters:
      - name: item-id
        in: path
        required: true
        schema:
          type: string
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision-id
        in: path
        required: true
        schema:
          type: string
      - name: accept
        in: query
        schema:
          type: string
      - name: format
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: item-id
      in: path
      required: true
      schema:
        type: string
    - name: library-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
    - name: revision-id
      in: path
      required: true
      schema:
        type: string
  /v2/projects/{project-id}/libraries/{library-id}/items/{item-id}/token:
    post:
      parameters:
      - name: item-id
        in: path
        required: true
        schema:
          type: string
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: accept
        in: query
        schema:
          type: string
      - name: format
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: item-id
      in: path
      required: true
      schema:
        type: string
    - name: library-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
    - name: include
      in: query
      schema:
        type: string
    - name: includeLabel
      in: query
      schema:
        type: string
    - name: includeLabelGroup
      in: query
      schema:
        type: string
    - name: includePath
      in: query
      schema:
        type: string
  /v2/projects/{project-id}/libraries/{library-id}/settings:
    get:
      parameters:
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: library-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/members:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: userType
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/members/{user-id}:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/models:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      - name: noAccess
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: search
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/models/default-folder:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/models/exports/{export-id}:
    get:
      parameters:
      - name: export-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/models/{model-id}:
    get:
      parameters:
      - name: model-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      - name: normalize
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: model-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: model-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/models/{model-id}/image:
    get:
      parameters:
      - name: model-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: size
        in: query
        schema:
          format: int32
          default: "400"
          type: integer
      - name: If-None-Match
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: model-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: Transformation
        in: header
        schema:
          $ref: '#/components/schemas/UploadModelImageTransformationEntity'
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: model-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/models/{model-id}/transform:
    put:
      parameters:
      - name: model-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/naming-conventions:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: archived
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/naming-conventions/{naming-convention-id}:
    get:
      parameters:
      - name: naming-convention-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: naming-convention-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: naming-convention-id
      in: path
      required: true
      schema:
        type: string
    - name: project-id
      in: path
      required: true
      schema:
        type: string
  /v2/projects/{project-id}/naming-conventions/{naming-convention-id}/blocks/{naming-convention-block-id}:
    delete:
      parameters:
      - name: naming-convention-block-id
        in: path
        required: true
        schema:
          type: string
      - name: naming-convention-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/naming-conventions/{naming-convention-id}/validate:
    post:
      parameters:
      - name: naming-convention-id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/revision_status:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/revision_status/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/revisions:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      - name: model
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: product
        in: query
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: Bimsync-Params
        in: header
        schema:
          $ref: '#/components/schemas/CreateRevisionEntity'
      requestBody:
        content:
          application/ifc:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
          application/ifczip:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
          application/ifcxml:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
    options:
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/revisions/{revision-id}:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision-id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      - name: normalize
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/revisions/{revision-id}/download:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision-id
        in: path
        required: true
        schema:
          type: string
      - name: normalize
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/selections_2d:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/spatial_structure:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/teams:
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/teams/{team-id}:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: team-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: team-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: project-id
      in: path
      required: true
      schema:
        type: string
    - name: team-id
      in: path
      required: true
      schema:
        type: string
  /v2/projects/{project-id}/teams/{team-id}/members:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: team-id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: team-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/teams/{team-id}/members/{user-id}:
    delete:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: team-id
        in: path
        required: true
        schema:
          type: string
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/viewer2d/data:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/viewer2d/geometry:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: index
        in: query
        schema:
          format: int32
          default: "0"
          type: integer
      - name: token
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/viewer2d/token:
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
    options:
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/viewer3d/data:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: query
        schema:
          type: string
      - name: query
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
    options:
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/viewer3d/geometry:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: index
        in: query
        schema:
          format: int32
          default: "0"
          type: integer
      - name: token
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/viewer3d/tiles/{revision-id}/{file}:
    get:
      parameters:
      - name: file
        in: path
        required: true
        schema:
          type: string
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: revision-id
        in: path
        required: true
        schema:
          type: string
      - name: Bimsync-Token
        in: header
        schema:
          type: string
      - name: If-None-Match
        in: header
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/viewer3d/token:
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    options:
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/viewer3d/token/{token}:
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/webhooks/user:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalAuthenticator'
      responses:
        "200":
          description: OK
  /v2/projects/{project-id}/webhooks/user/{webhook-id}:
    get:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: webhook-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: webhook-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: project-id
        in: path
        required: true
        schema:
          type: string
      - name: webhook-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/scim/v2/ResourceTypes:
    get:
      responses:
        "200":
          description: OK
  /v2/scim/v2/Schemas:
    get:
      responses:
        "200":
          description: OK
  /v2/scim/v2/Schemas/urn:ietf:params:scim:schemas:core:2.0:Group:
    get:
      responses:
        "200":
          description: OK
  /v2/scim/v2/Schemas/urn:ietf:params:scim:schemas:core:2.0:User:
    get:
      responses:
        "200":
          description: OK
  /v2/scim/v2/Schemas/urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:
    get:
      responses:
        "200":
          description: OK
  /v2/scim/v2/ServiceProviderConfig:
    get:
      responses:
        "200":
          description: OK
  /v2/scim/v2/Users:
    get:
      parameters:
      - name: count
        in: query
        schema:
          format: int32
          default: "100"
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      - name: startIndex
        in: query
        schema:
          format: int32
          default: "1"
          type: integer
      responses:
        "200":
          description: OK
    post:
      responses:
        "200":
          description: OK
  /v2/scim/v2/Users/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
  /v2/share/collections/{token}:
    get:
      parameters:
      - name: token
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/share/collections/{token}/download:
    get:
      parameters:
      - name: token
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/user:
    get:
      responses:
        "200":
          description: OK
    put:
      responses:
        "200":
          description: OK
  /v2/user/jwt/status/{code}:
    get:
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v2/user/starred_projects:
    get:
      parameters:
      - name: include
        in: query
        schema:
          type: string
      - name: includeProjectSettings
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: revisions
        in: query
        schema:
          default: none
          type: string
      responses:
        "200":
          description: OK
  /v2/users:
    get:
      parameters:
      - name: page
        in: query
        schema:
          format: int32
          default: 1
          type: integer
      - name: pageSize
        in: query
        schema:
          format: int32
          default: 100
          type: integer
      - name: username
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      responses:
        "200":
          description: OK
  /v2/users/{user-id}:
    get:
      parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: user-id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
components:
  schemas:
    Classification:
      type: object
      properties:
        description:
          type: string
        identification:
          type: string
    CreateLibraryItemRevision:
      type: object
      properties:
        name:
          type: string
    CreateRevisionEntity:
      type: object
      properties:
        model:
          type: string
        comment:
          type: string
        filename:
          type: string
        callbackUri:
          type: string
    Document:
      type: object
      properties:
        filename:
          type: string
        type:
          type: string
        isModelAction:
          type: boolean
    IndexModeEntity:
      enum:
      - FULL
      - BASIC
      type: string
    Link:
      type: object
      properties:
        url:
          type: string
    NewLibraryItemEntity:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        parentId:
          type: string
        parentIdIsSet:
          type: boolean
        failOnDocumentExists:
          type: boolean
        document:
          $ref: '#/components/schemas/Document'
        classification:
          $ref: '#/components/schemas/Classification'
        link:
          $ref: '#/components/schemas/Link'
    PrincipalAuthenticator:
      type: object
    UploadModelImageTransformationEntity:
      type: object
      properties:
        x:
          format: int32
          type: integer
        "y":
          format: int32
          type: integer
        width:
          format: int32
          type: integer
        height:
          format: int32
          type: integer
        rotation:
          format: int32
          type: integer
